<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tech's Homepage</title>
  <style>
    @font-face {
      font-family: "Mulish";
      src: url("fonts/mulish.eot");
      src: url("fonts/mulish.eot?#iefix")format("embedded-opentype"),
        url("fonts/mulish.woff")format("woff"),
        url("fonts/mulish.woff2")format("woff2"),
        url("fonts/mulish.ttf")format("truetype"),
        url("fonts/mulish.svg#Mulish")format("svg");
      font-weight: normal;
      font-style: normal;
      font-display: swap;
    }

    * {
      box-sizing: border-box;
    }

    html,
    body {
      height: 100%;
      margin: 0;
      padding: 0;
      font-size: 16pt;
    }

    body {
      width: 100%;

      display: flex;

      font-family: "Mulish";
      line-height: 1.6;
      color: #333;

      background-image: url('/Users/josh/Library/CloudStorage/Dropbox/Pictures/Collections/Furs/1212331757.blotch_refresh.jpg');
      background-position: center;
      /* Center the image */
      background-repeat: no-repeat;
      /* Prevent tiling */
      background-size: cover;
    }

    .backdrop {
      width: 100%;
      height: 100%;

      display: flex;
      flex-direction: column;
      justify-content: center;
      /* horizontal alignment */
      align-items: center;
      /* vertical alignment */

      background-color: rgba(0, 0, 0, 0.7);
    }

    .destination {
      background-color: rgba(0, 0, 0, 0.5);
      color: white;
      padding: 10px 30px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      display: flex;
      flex-direction: row;
      align-items: center;
      margin-bottom: 1.5em;
    }

    .icon-container {
      width: 4em;
      height: 2em;
      margin-right: 1.3em;
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: center;
      opacity: 0.8;
    }

    .icon {
      width: 2em;
      height: 2em;
    }

    .icon-small {
      width: 1.5em;
      height: 1.5em;
    }

    .plus {
      position: relative;
      bottom: 2px;
      font-weight: bold;
      font-size: 1.4em;
    }

    input[type="text"] {
      background: none;
      border: solid 2px rgba(255, 255, 255, 0.3);
      color: white;
      padding: .4em;
      width: 30em;
    }

    /*input[type="text"]:focus {
            border-color: rgba(255,255,255,0.3);  
            box-shadow: 0 0 5px rgba(255, 255, 255, 1.2);
        }*/

    .shortcut-hint {
      display: none;
      margin-left: 1.3em;
      opacity: 0.3;
    }
  </style>
</head>

<body>
  <div class="backdrop">

    <div class="destination">
      <div class="icon-container">
        <img src="icons/globe.svg" alt="Icon" class="icon-small" style="margin-right: .2em">
        <div class="plus" style="margin-right: .15em">+</div>
        <img src="icons/google.svg" alt="Icon" class="icon-small">
      </div>
      <input id="google" type="text" />
      <div class="shortcut-hint">⌘1</div>
    </div>

    <div class="destination" style="margin-bottom:10em;">
      <div class="icon-container">
        <img src="icons/openai.svg" alt="Icon" class="icon">
      </div>
      <input id="chatgpt" type="text" />
      <div class="shortcut-hint">⌘2</div>
    </div>

  </div>

  <script>
    const URL_PATTERNS = [{
      pattern: /^http[s]?:\/\//i,
      format: v => v
    }, {
      pattern: /^www./i,
      format: v => `http://${v}`
    }, {
      pattern: /(.com)$/i,
      format: v => `http://${v}`
    }];

    function tryToParseToFullUrl(searchTerm) {
      for (let i = 0; i < URL_PATTERNS.length; i++) {
        if (URL_PATTERNS[i].pattern.test(searchTerm)) {
          return URL_PATTERNS[i].format(searchTerm);
        }
      }

      return "";
    }

    window.addEventListener('DOMContentLoaded', () => {
      const elem_google = document.getElementById('google');
      const elem_chatgpt = document.getElementById('chatgpt');

      elem_google.focus();      // put the cursor in the elem_google
      elem_google.select();     // select the text

      elem_chatgpt.addEventListener("keydown", function (event) {
        if (event.key === "Enter") {
          const encoded = encodeURIComponent(elem_chatgpt.value);
          // could add &temporary-chat=true
          window.location.href = `https://chatgpt.com/?q=${encoded}&hints=search`
        }
      });

      elem_google.addEventListener("keydown", function (event) {
        if (event.key === "Enter") {
          googleOrNavigate(elem_google.value);
        }
      });

      function googleOrNavigate(v) {
        const searchTermAsUrl = tryToParseToFullUrl(v);
        if (searchTermAsUrl) {
          window.location.href = searchTermAsUrl;
          return;
        }

        const encodedTerm = encodeURIComponent(v);
        const url = `https://www.google.com/search?q=${encodedTerm}`;

        window.location.href = url;
      }
    });
  </script>
</body>

</html>